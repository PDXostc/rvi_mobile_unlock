package org.genivi.rvitest;

import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.View;

import com.jaguarlandrover.rvi.RVILocalNode;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Set;

public class TestSet1Activity extends TestSetBaseActivity {
    private static final String TAG = "RVITest/TestSet1Activty";

    ArrayList<String> test1LocalCreds = new ArrayList<>(Arrays.asList(
        "eyJhbGciOiAiUlMyNTYiLCJ0eXAiOiAiSldUIn0=.eyJpc3MiOiAiR0VOSVZJIiwgInJpZ2h0X3RvX2ludm9rZSI6IFsiZ2VuaXZpLm9yZy9iYWNrZW5kLysvdGVzdC8rIl0sICJyaWdodF90b19yZWNlaXZlIjogWyJnZW5pdmkub3JnL2FuZHJvaWQvKy90ZXN0LysiXSwgInZhbGlkaXR5IjogeyAic3RhcnQiOiAxNDUyNDcwNDAwLCAic3RvcCI6IDE0ODQwOTI4MDB9LCAiZGV2aWNlX2NlcnQiOiAiTUlJRVpEQ0NBa3dDQmdGWWRNcjJTREFOQmdrcWhraUc5dzBCQVFzRkFEQ0JrekVMTUFrR0ExVUVCaE1DVlZNeER6QU5CZ05WQkFnTUJrOXlaV2R2YmpFUk1BOEdBMVVFQnd3SVVHOXlkR3hoYm1ReER6QU5CZ05WQkFvTUJrZEZUa2xXU1RFTU1Bb0dBMVVFQ3d3RFVsWkpNUmN3RlFZRFZRUUREQTR4T1RJdU1UWTRMakUyTGpJME5URW9NQ1lHQ1NxR1NJYjNEUUVKQVJZWmNHUjRiM04wWXk1aGJtUnliMmxrUUdkdFlXbHNMbU52YlRBZUZ3MHhOakV4TVRnd01ERTJORGhhRncweE56RXhNVGd3TURFMk5EaGFNRmN4SnpBbEJnTlZCQU1NSG1GdVpISnZhV1F2WkdwU1ExTkNOazFVV21WRmFVOVFNVEE1WW5aeFFURVBNQTBHQTFVRUNnd0dSMlZ1YVhacE1Sc3dHUVlEVlFRTERCSkJibVJ5YjJsa0lGVnViRzlqYXlCQmNIQXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEcHdwRlJzL2dwWFQ1OGVQTWNNLzlZYVlTcld6TlRhZURmS09YT2RlRjgwQzVHeG1kbHE4dld0TUw4RG5rUnFvWFh1YWlPVkk2czNsRlIxSDVDQ0p0UnU0Ris1N05zSUNMZXFZOFlRNVV0VFJXK0NwQUd4Tk1BbEsrUWlQVW83SmdEeWw4Um5KV2x1cUdrVGZUeGdHc21nazNhVVpISk9SeFFWMk1aOEJENEFlVEJXLzA1c0RKQVdxS3c3MDY0ZlFZZUhQUFoxWHA1N0I4WGJiNW9SSEFzQjBsRFJnaldOa1NFdTRnRENrTGtaZ282djRMWjBzdVFYdnFMbk1zRVVvb0QrMWNNNERmL1J1WUdGalEzUXhLRlBuVTgzTmpTZmdLNTMrSHJTS3BwZ0ovT2lXZU9mSzMxRldCOTFtV2VsVFNIVGJEd1gzVHBNamVGTDUwUkM2U3hBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFGcUpYSWlnQi9oaVkzSXBqcEFjRFROaEFRMkV2aHhHVnRueEtKT1p5UU43bWdTZW5leW1NcnlhZUZQZ3VYU0ZzeHYyQlQ0T293RWVZZUEva2dhUHdESTJxRnVYZU9WcmNiOTBodmNPQ1ZCaUp3dS9pY3NGMnJZdEtsUW9jZjZWMkY5RWJWZXQ0SFJCYkZoK1lUVEFzbktidGt4ZkVOa0hTTmorTnVRK1I4SFgrb0w3ZytTZXgvbGwwWDJlVkF4SlRFVDhZOVB6dWZEdjBzTFI2cFhpaXNaVEFiMVpkZ2ZQZ29NK0NsS2M2a2FRdEtwc3N5N0piUGpJWVNkZVVwZXo5c296TmV5SU5hN3B5ck9HNzdpVzQrclVMQnB0dWV1UXNTcFV5Z2pQdXRHSmNUVFFsTlcyZEsvZTloRGRNMVM3ZldWbUxIbUJNcjV1dDFPNHNnbldkMFBUVSt3blpjdWxPTWRDVTdMWTJ4UGxqMis0d2JGcWNrMGkrZkVoT2EyaktMTFNTVmxBY0k0MHVnaVJNL0pQR0NZcjd3dEQ3YVVVcDNtdDUrMFZHajRHV1FaR1BlR2h6TXQ0KzBJRDVPMlNvdStoMmxlTzRjbkZMcXdFMElxUmhWbnVkbE5ZVlZFNWQxNkE0a2t1bG1SUk1Kc042UmhtYnpSTVRCNzRmN0FSTldoYlNvbldDNk5YYXdXNUlYZzRtOFRTa0ZVTXdRa1VwVUZMS2NhSjR4RnhIWDRQOWhEKzIwZjFLSUNhTmpreFhhY0NBcjlPYk0xTVQ0ZWsya1lJTjZYSEh5UlZxRnRUMW1NY1NvQVJrWmFkTmpIT1kreG9hcCtTamdoYVdIMm95K0VkZ0F5Ylc2c3AvbVNvYkhVRHV2RTdHcDM5WGhmczQ2ek9TZEpZZGNZSSIsICJjcmVhdGVfdGltZXN0YW1wIjogMTQ3NjEzOTg3OCwgImlkIjogIjcxNWJjNDcxLTUzYTktNGM1OC05ZTRjLWIxNGFiNzI4ZjhmOCJ9.lHrsmJ2glv4Yika1Icwtohoeo0RQBMuaC79C2gcJeZJrM3G-H9-vx_zRvL70TShaOIC7o_G1bjJ2B0WHeZIjaqtLFxFlEMlGn_306ylMzb7fT11Kv4pB2NUezWEzjyas9Rz7OfjqPwK2cJddADGc6a4ZFekFU1Ui0znZkwzNGymQGnwUkV71z3TelP3C-w74D6nA7GQKLJRPLhRJWyv9XUoJdarGReH_Lrj7AK5pn5PqbhxLXj7G7-qdic67rnb86NcPiRJTcVYdXCM_YD3X47kQtFTSXyMrdeWY1AB4VoMuxgfkWcH1J3T6ucBV8Mv7df6gkdqarF3C10jidKzHBkORBzy77RPvRrdbBgMrM8yHyoOd8yYZgIywNH7TkTlIIhaoqfChFOXe6Y1O4_9pg-mYodYayHgoDO2CEk9L7RwZixM9UndgpQ9j04glUcWxJ5p8-1816a87fvgsxTaWjgo3WxgzS3bU7kZ2fBcSYrZQLtPy5KWCNc1WyAH4gBjo070ri5g9Sdm4coHZlUEDsBPjzRXAO8Xe13dzT4lhHoekkR6E1eJY2ZMIEQu5-Ag7N7H87wW7PcTGYKes6moQQSjiyp038BG1dbIytg2fBrFEUD_WlVmRw4At7wYrrx6snakUHfFwnrHCqBAsKaw6oTk82jwX5rEeHf3usfZZAxI="
    ));

    ArrayList<String> test2LocalCreds = new ArrayList<>(Arrays.asList(
        "eyJhbGciOiAiUlMyNTYiLCJ0eXAiOiAiSldUIn0=.eyJpc3MiOiAiR0VOSVZJIiwgInJpZ2h0X3RvX2ludm9rZSI6IFsiZ2VuaXZpLm9yZy9iYWNrZW5kLysvdGVzdC8rIiwiZ2VuaXZpLm9yZy9iYWNrZW5kLysvdGVzdC8rIl0sICJyaWdodF90b19yZWNlaXZlIjogWyJnZW5pdmkub3JnL2FuZHJvaWQvKy90ZXN0LysiLCJnZW5pdmkub3JnL2FuZHJvaWQvKy90ZXN0L2luZGlhLysiXSwgInZhbGlkaXR5IjogeyAic3RhcnQiOiAxNDUyNDcwNDAwLCAic3RvcCI6IDE0ODQwOTI4MDB9LCAiZGV2aWNlX2NlcnQiOiAiTUlJRVpEQ0NBa3dDQmdGWWRNcjJTREFOQmdrcWhraUc5dzBCQVFzRkFEQ0JrekVMTUFrR0ExVUVCaE1DVlZNeER6QU5CZ05WQkFnTUJrOXlaV2R2YmpFUk1BOEdBMVVFQnd3SVVHOXlkR3hoYm1ReER6QU5CZ05WQkFvTUJrZEZUa2xXU1RFTU1Bb0dBMVVFQ3d3RFVsWkpNUmN3RlFZRFZRUUREQTR4T1RJdU1UWTRMakUyTGpJME5URW9NQ1lHQ1NxR1NJYjNEUUVKQVJZWmNHUjRiM04wWXk1aGJtUnliMmxrUUdkdFlXbHNMbU52YlRBZUZ3MHhOakV4TVRnd01ERTJORGhhRncweE56RXhNVGd3TURFMk5EaGFNRmN4SnpBbEJnTlZCQU1NSG1GdVpISnZhV1F2WkdwU1ExTkNOazFVV21WRmFVOVFNVEE1WW5aeFFURVBNQTBHQTFVRUNnd0dSMlZ1YVhacE1Sc3dHUVlEVlFRTERCSkJibVJ5YjJsa0lGVnViRzlqYXlCQmNIQXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEcHdwRlJzL2dwWFQ1OGVQTWNNLzlZYVlTcld6TlRhZURmS09YT2RlRjgwQzVHeG1kbHE4dld0TUw4RG5rUnFvWFh1YWlPVkk2czNsRlIxSDVDQ0p0UnU0Ris1N05zSUNMZXFZOFlRNVV0VFJXK0NwQUd4Tk1BbEsrUWlQVW83SmdEeWw4Um5KV2x1cUdrVGZUeGdHc21nazNhVVpISk9SeFFWMk1aOEJENEFlVEJXLzA1c0RKQVdxS3c3MDY0ZlFZZUhQUFoxWHA1N0I4WGJiNW9SSEFzQjBsRFJnaldOa1NFdTRnRENrTGtaZ282djRMWjBzdVFYdnFMbk1zRVVvb0QrMWNNNERmL1J1WUdGalEzUXhLRlBuVTgzTmpTZmdLNTMrSHJTS3BwZ0ovT2lXZU9mSzMxRldCOTFtV2VsVFNIVGJEd1gzVHBNamVGTDUwUkM2U3hBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFGcUpYSWlnQi9oaVkzSXBqcEFjRFROaEFRMkV2aHhHVnRueEtKT1p5UU43bWdTZW5leW1NcnlhZUZQZ3VYU0ZzeHYyQlQ0T293RWVZZUEva2dhUHdESTJxRnVYZU9WcmNiOTBodmNPQ1ZCaUp3dS9pY3NGMnJZdEtsUW9jZjZWMkY5RWJWZXQ0SFJCYkZoK1lUVEFzbktidGt4ZkVOa0hTTmorTnVRK1I4SFgrb0w3ZytTZXgvbGwwWDJlVkF4SlRFVDhZOVB6dWZEdjBzTFI2cFhpaXNaVEFiMVpkZ2ZQZ29NK0NsS2M2a2FRdEtwc3N5N0piUGpJWVNkZVVwZXo5c296TmV5SU5hN3B5ck9HNzdpVzQrclVMQnB0dWV1UXNTcFV5Z2pQdXRHSmNUVFFsTlcyZEsvZTloRGRNMVM3ZldWbUxIbUJNcjV1dDFPNHNnbldkMFBUVSt3blpjdWxPTWRDVTdMWTJ4UGxqMis0d2JGcWNrMGkrZkVoT2EyaktMTFNTVmxBY0k0MHVnaVJNL0pQR0NZcjd3dEQ3YVVVcDNtdDUrMFZHajRHV1FaR1BlR2h6TXQ0KzBJRDVPMlNvdStoMmxlTzRjbkZMcXdFMElxUmhWbnVkbE5ZVlZFNWQxNkE0a2t1bG1SUk1Kc042UmhtYnpSTVRCNzRmN0FSTldoYlNvbldDNk5YYXdXNUlYZzRtOFRTa0ZVTXdRa1VwVUZMS2NhSjR4RnhIWDRQOWhEKzIwZjFLSUNhTmpreFhhY0NBcjlPYk0xTVQ0ZWsya1lJTjZYSEh5UlZxRnRUMW1NY1NvQVJrWmFkTmpIT1kreG9hcCtTamdoYVdIMm95K0VkZ0F5Ylc2c3AvbVNvYkhVRHV2RTdHcDM5WGhmczQ2ek9TZEpZZGNZSSIsICJjcmVhdGVfdGltZXN0YW1wIjogMTQ3NjEzOTg3OCwgImlkIjogIjE3NDY0NjIzLTljZmEtNDQ4ZS04MmRmLTFiMGViNzcwOWRlYyJ9.bXd3PkV1EjHs_KNTNsDGGFtuEH-iqMgZZD2ZE6Yyeziv6Ke2Uqd3EecsXI7cDrs8qg1rzG94b5EGJviHFSXur3Jz_VtVoHRXDfbcX0adfkwLB-67TmJFIcAAtO4jwwsXAZIn9koJXvclq8NcAeUcFKX8-jJmLLEWcv7fTx7b0M2uxO-rji2uNdUwAJBlrwL08FX9pdTFnlVERNVPp4Yz39UkLPDTImM9kTT_X5gozYxFBPiw1SzjcYnE5z6PzgS1LRAc9jDdSO5Xxci2imnShkr0v9W2tZmzya4n6MyxPljWTvjW_CJhYihOknwTAfzsl5_qTtjwN4J6ksTd4RkOuixG202bGWxCGtiU9AYaaWLVAFPCA_qFeypRWqxnbda1BJvhQe5ZMEoTRiVS4rLLyGnCfxIWvQybFk6MxlBFFl2itqVYRuHg28Q0pC9dA6U7fRMKJTRfCt5gmZynS7CtFsBQwxEENsnhVr3xHLw70_dTFdKKt-9cRzYDOVdY0sN1ho2xJm2HHpBVmk4YvX5t6WRb5IblrIRlcXxSd2Z2kV9d_F8BETqHJTfNMv0x3bvCkhaGOqFb0npKC7LuauH-pGiPrxs3yWttsLEyxJIOeaU2Is32jHx_yADkd2IKbtmFEI2UtxLeoccL9AmE92VF7mdxBUzJHqs7zo0NJlkNbF8=",
    ));


    

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        getSupportActionBar().setDisplayHomeAsUpEnabled(true);

        TestServerNode.addListener(testServerNodeListener);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();

        TestServerNode.removeListener(testServerNodeListener);
    }

    @Override
    protected void runTest1(String testName) {
        Log.d(TAG, "runTest1");

        testNameLabel.setText(testName);

        RVILocalNode.setCredentials(this, test1LocalCreds);
    }

    @Override
    protected void runTest2(String testName) {
        Log.d(TAG, "runTest2");

        testNameLabel.setText(testName);

        RVILocalNode.setCredentials(this, test2LocalCreds);
    }

    TestServerNode.Listener testServerNodeListener = new TestServerNode.Listener() {
        @Override
        public void testServerNodeDidConnect() {

        }

        @Override
        public void testServerNodeDidDisconnect() {

        }

        @Override
        public void testServerNodeDidAuthorizeRemoteServices(Set<String> serviceIdentifiers) {

        }

        @Override
        public void testServerNodeDidAuthorizeLocalServices(Set<String> serviceIdentifiers) {

        }
    };

}
